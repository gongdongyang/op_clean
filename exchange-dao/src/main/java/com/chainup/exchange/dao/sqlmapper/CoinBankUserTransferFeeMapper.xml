<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chainup.exchange.dao.CoinBankUserTransferFeeMapper">
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.CoinBankUserTransferFee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="coin_bank_id" jdbcType="INTEGER" property="coinBankId" />
    <result column="coin_bank_account_id" jdbcType="INTEGER" property="coinBankAccountId" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="deal_coin" jdbcType="VARCHAR" property="dealCoin" />
    <result column="deal_symbol" jdbcType="VARCHAR" property="dealSymbol" />
    <result column="fee_coin_type" jdbcType="INTEGER" property="feeCoinType" />
    <result column="fee_coin_name" jdbcType="VARCHAR" property="feeCoinName" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="account_time" jdbcType="DATE" property="accountTime" />
    <result column="profit" jdbcType="DECIMAL" property="profit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, coin_bank_id, coin_bank_account_id, uid, deal_coin, deal_symbol, fee_coin_type, 
    fee_coin_name, fee, account_time, profit
  </sql>
  <select id="selectByExample" parameterType="com.chainup.common.exchange.entity.CoinBankUserTransferFeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from coin_bank_user_transfer_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coin_bank_user_transfer_fee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coin_bank_user_transfer_fee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.CoinBankUserTransferFeeExample">
    delete from coin_bank_user_transfer_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.CoinBankUserTransferFee">
    insert into coin_bank_user_transfer_fee (id, coin_bank_id, coin_bank_account_id, 
      uid, deal_coin, deal_symbol, 
      fee_coin_type, fee_coin_name, fee, 
      account_time, profit)
    values (#{id,jdbcType=INTEGER}, #{coinBankId,jdbcType=INTEGER}, #{coinBankAccountId,jdbcType=INTEGER}, 
      #{uid,jdbcType=INTEGER}, #{dealCoin,jdbcType=VARCHAR}, #{dealSymbol,jdbcType=VARCHAR}, 
      #{feeCoinType,jdbcType=INTEGER}, #{feeCoinName,jdbcType=VARCHAR}, #{fee,jdbcType=DECIMAL}, 
      #{accountTime,jdbcType=DATE}, #{profit,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.CoinBankUserTransferFee">
    insert into coin_bank_user_transfer_fee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="coinBankId != null">
        coin_bank_id,
      </if>
      <if test="coinBankAccountId != null">
        coin_bank_account_id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="dealCoin != null">
        deal_coin,
      </if>
      <if test="dealSymbol != null">
        deal_symbol,
      </if>
      <if test="feeCoinType != null">
        fee_coin_type,
      </if>
      <if test="feeCoinName != null">
        fee_coin_name,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="accountTime != null">
        account_time,
      </if>
      <if test="profit != null">
        profit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coinBankId != null">
        #{coinBankId,jdbcType=INTEGER},
      </if>
      <if test="coinBankAccountId != null">
        #{coinBankAccountId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="dealCoin != null">
        #{dealCoin,jdbcType=VARCHAR},
      </if>
      <if test="dealSymbol != null">
        #{dealSymbol,jdbcType=VARCHAR},
      </if>
      <if test="feeCoinType != null">
        #{feeCoinType,jdbcType=INTEGER},
      </if>
      <if test="feeCoinName != null">
        #{feeCoinName,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="accountTime != null">
        #{accountTime,jdbcType=DATE},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.CoinBankUserTransferFeeExample" resultType="java.lang.Long">
    select count(*) from coin_bank_user_transfer_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update coin_bank_user_transfer_fee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.coinBankId != null">
        coin_bank_id = #{record.coinBankId,jdbcType=INTEGER},
      </if>
      <if test="record.coinBankAccountId != null">
        coin_bank_account_id = #{record.coinBankAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.dealCoin != null">
        deal_coin = #{record.dealCoin,jdbcType=VARCHAR},
      </if>
      <if test="record.dealSymbol != null">
        deal_symbol = #{record.dealSymbol,jdbcType=VARCHAR},
      </if>
      <if test="record.feeCoinType != null">
        fee_coin_type = #{record.feeCoinType,jdbcType=INTEGER},
      </if>
      <if test="record.feeCoinName != null">
        fee_coin_name = #{record.feeCoinName,jdbcType=VARCHAR},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.accountTime != null">
        account_time = #{record.accountTime,jdbcType=DATE},
      </if>
      <if test="record.profit != null">
        profit = #{record.profit,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update coin_bank_user_transfer_fee
    set id = #{record.id,jdbcType=INTEGER},
      coin_bank_id = #{record.coinBankId,jdbcType=INTEGER},
      coin_bank_account_id = #{record.coinBankAccountId,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      deal_coin = #{record.dealCoin,jdbcType=VARCHAR},
      deal_symbol = #{record.dealSymbol,jdbcType=VARCHAR},
      fee_coin_type = #{record.feeCoinType,jdbcType=INTEGER},
      fee_coin_name = #{record.feeCoinName,jdbcType=VARCHAR},
      fee = #{record.fee,jdbcType=DECIMAL},
      account_time = #{record.accountTime,jdbcType=DATE},
      profit = #{record.profit,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.CoinBankUserTransferFee">
    update coin_bank_user_transfer_fee
    <set>
      <if test="coinBankId != null">
        coin_bank_id = #{coinBankId,jdbcType=INTEGER},
      </if>
      <if test="coinBankAccountId != null">
        coin_bank_account_id = #{coinBankAccountId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="dealCoin != null">
        deal_coin = #{dealCoin,jdbcType=VARCHAR},
      </if>
      <if test="dealSymbol != null">
        deal_symbol = #{dealSymbol,jdbcType=VARCHAR},
      </if>
      <if test="feeCoinType != null">
        fee_coin_type = #{feeCoinType,jdbcType=INTEGER},
      </if>
      <if test="feeCoinName != null">
        fee_coin_name = #{feeCoinName,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="accountTime != null">
        account_time = #{accountTime,jdbcType=DATE},
      </if>
      <if test="profit != null">
        profit = #{profit,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.CoinBankUserTransferFee">
    update coin_bank_user_transfer_fee
    set coin_bank_id = #{coinBankId,jdbcType=INTEGER},
      coin_bank_account_id = #{coinBankAccountId,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      deal_coin = #{dealCoin,jdbcType=VARCHAR},
      deal_symbol = #{dealSymbol,jdbcType=VARCHAR},
      fee_coin_type = #{feeCoinType,jdbcType=INTEGER},
      fee_coin_name = #{feeCoinName,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=DECIMAL},
      account_time = #{accountTime,jdbcType=DATE},
      profit = #{profit,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>