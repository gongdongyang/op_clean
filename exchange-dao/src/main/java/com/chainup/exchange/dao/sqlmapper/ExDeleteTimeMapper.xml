<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chainup.exchange.dao.ExDeleteTimeMapper">
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.ExDeleteTime">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="stime" jdbcType="TIMESTAMP" property="stime" />
    <result column="etime" jdbcType="TIMESTAMP" property="etime" />
    <result column="interval_time" jdbcType="INTEGER" property="intervalTime" />
    <result column="retention_time" jdbcType="INTEGER" property="retentionTime" />
    <result column="every_time" jdbcType="INTEGER" property="everyTime" />
    <result column="clear_type" jdbcType="TINYINT" property="clearType" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tag, stime, etime, interval_time, retention_time, every_time, clear_type, status
  </sql>
  <select id="selectByExample" parameterType="com.chainup.common.exchange.entity.ExDeleteTimeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ex_delete_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ex_delete_time
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ex_delete_time
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.ExDeleteTimeExample">
    delete from ex_delete_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.ExDeleteTime">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ex_delete_time (tag, stime, etime, 
      interval_time, retention_time, every_time, 
      clear_type, status)
    values (#{tag,jdbcType=VARCHAR}, #{stime,jdbcType=TIMESTAMP}, #{etime,jdbcType=TIMESTAMP}, 
      #{intervalTime,jdbcType=INTEGER}, #{retentionTime,jdbcType=INTEGER}, #{everyTime,jdbcType=INTEGER}, 
      #{clearType,jdbcType=TINYINT}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.ExDeleteTime">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ex_delete_time
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tag != null">
        tag,
      </if>
      <if test="stime != null">
        stime,
      </if>
      <if test="etime != null">
        etime,
      </if>
      <if test="intervalTime != null">
        interval_time,
      </if>
      <if test="retentionTime != null">
        retention_time,
      </if>
      <if test="everyTime != null">
        every_time,
      </if>
      <if test="clearType != null">
        clear_type,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="stime != null">
        #{stime,jdbcType=TIMESTAMP},
      </if>
      <if test="etime != null">
        #{etime,jdbcType=TIMESTAMP},
      </if>
      <if test="intervalTime != null">
        #{intervalTime,jdbcType=INTEGER},
      </if>
      <if test="retentionTime != null">
        #{retentionTime,jdbcType=INTEGER},
      </if>
      <if test="everyTime != null">
        #{everyTime,jdbcType=INTEGER},
      </if>
      <if test="clearType != null">
        #{clearType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.ExDeleteTimeExample" resultType="java.lang.Long">
    select count(*) from ex_delete_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ex_delete_time
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tag != null">
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.stime != null">
        stime = #{record.stime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.etime != null">
        etime = #{record.etime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.intervalTime != null">
        interval_time = #{record.intervalTime,jdbcType=INTEGER},
      </if>
      <if test="record.retentionTime != null">
        retention_time = #{record.retentionTime,jdbcType=INTEGER},
      </if>
      <if test="record.everyTime != null">
        every_time = #{record.everyTime,jdbcType=INTEGER},
      </if>
      <if test="record.clearType != null">
        clear_type = #{record.clearType,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ex_delete_time
    set id = #{record.id,jdbcType=INTEGER},
      tag = #{record.tag,jdbcType=VARCHAR},
      stime = #{record.stime,jdbcType=TIMESTAMP},
      etime = #{record.etime,jdbcType=TIMESTAMP},
      interval_time = #{record.intervalTime,jdbcType=INTEGER},
      retention_time = #{record.retentionTime,jdbcType=INTEGER},
      every_time = #{record.everyTime,jdbcType=INTEGER},
      clear_type = #{record.clearType,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.ExDeleteTime">
    update ex_delete_time
    <set>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="stime != null">
        stime = #{stime,jdbcType=TIMESTAMP},
      </if>
      <if test="etime != null">
        etime = #{etime,jdbcType=TIMESTAMP},
      </if>
      <if test="intervalTime != null">
        interval_time = #{intervalTime,jdbcType=INTEGER},
      </if>
      <if test="retentionTime != null">
        retention_time = #{retentionTime,jdbcType=INTEGER},
      </if>
      <if test="everyTime != null">
        every_time = #{everyTime,jdbcType=INTEGER},
      </if>
      <if test="clearType != null">
        clear_type = #{clearType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.ExDeleteTime">
    update ex_delete_time
    set tag = #{tag,jdbcType=VARCHAR},
      stime = #{stime,jdbcType=TIMESTAMP},
      etime = #{etime,jdbcType=TIMESTAMP},
      interval_time = #{intervalTime,jdbcType=INTEGER},
      retention_time = #{retentionTime,jdbcType=INTEGER},
      every_time = #{everyTime,jdbcType=INTEGER},
      clear_type = #{clearType,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>