<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chainup.exchange.dao.TransactionWarningCryptoMapper" >
  <resultMap id="BaseResultMap" type="com.chainup.common.stats.entity.TransactionWarningCrypto" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="withdraw_crypto_id" property="withdrawCryptoId" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="warn_level" property="warnLevel" jdbcType="INTEGER" />
    <result column="warin_info" property="warinInfo" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.chainup.common.stats.entity.TransactionWarningCrypto" extends="BaseResultMap" >
    <result column="warin_info" property="warinInfo" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, withdraw_crypto_id, uid, warn_level, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List" >
    warin_info
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.chainup.common.exchange.entity.TransactionWarningCryptoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from transaction_warning_crypto
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chainup.common.exchange.entity.TransactionWarningCryptoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transaction_warning_crypto
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from transaction_warning_crypto
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from transaction_warning_crypto
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.TransactionWarningCryptoExample" >
    delete from transaction_warning_crypto
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.stats.entity.TransactionWarningCrypto" >
    insert into transaction_warning_crypto (id, withdraw_crypto_id, uid, 
      warn_level, created_at, updated_at, 
      warin_info)
    values (#{id,jdbcType=INTEGER}, #{withdrawCryptoId,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{warnLevel,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{warinInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.stats.entity.TransactionWarningCrypto" >
    insert into transaction_warning_crypto
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="withdrawCryptoId != null" >
        withdraw_crypto_id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="warnLevel != null" >
        warn_level,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="warinInfo != null" >
        warin_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="withdrawCryptoId != null" >
        #{withdrawCryptoId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="warnLevel != null" >
        #{warnLevel,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="warinInfo != null" >
        #{warinInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.TransactionWarningCryptoExample" resultType="java.lang.Integer" >
    select count(*) from transaction_warning_crypto
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update transaction_warning_crypto
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.withdrawCryptoId != null" >
        withdraw_crypto_id = #{record.withdrawCryptoId,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.warnLevel != null" >
        warn_level = #{record.warnLevel,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.warinInfo != null" >
        warin_info = #{record.warinInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update transaction_warning_crypto
    set id = #{record.id,jdbcType=INTEGER},
      withdraw_crypto_id = #{record.withdrawCryptoId,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      warn_level = #{record.warnLevel,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      warin_info = #{record.warinInfo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update transaction_warning_crypto
    set id = #{record.id,jdbcType=INTEGER},
      withdraw_crypto_id = #{record.withdrawCryptoId,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      warn_level = #{record.warnLevel,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.stats.entity.TransactionWarningCrypto" >
    update transaction_warning_crypto
    <set >
      <if test="withdrawCryptoId != null" >
        withdraw_crypto_id = #{withdrawCryptoId,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="warnLevel != null" >
        warn_level = #{warnLevel,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="warinInfo != null" >
        warin_info = #{warinInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.chainup.common.stats.entity.TransactionWarningCrypto" >
    update transaction_warning_crypto
    set withdraw_crypto_id = #{withdrawCryptoId,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      warn_level = #{warnLevel,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      warin_info = #{warinInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.stats.entity.TransactionWarningCrypto" >
    update transaction_warning_crypto
    set withdraw_crypto_id = #{withdrawCryptoId,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      warn_level = #{warnLevel,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCyId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
     select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
     from transaction_warning_crypto where withdraw_crypto_id=#{cy_id}
  </select>
  
  <insert id="insertRiskWarning">
	INSERT INTO transaction_warning_crypto (
		withdraw_crypto_id,
		uid,
		warn_level,
		warin_info,
		created_at,
		updated_at
	)
	VALUES
	<foreach collection="list" item="item" separator="," >  
		(
			#{item.withdrawCryptoId},
			#{item.uid},
			#{item.warnLevel},
			#{item.warinInfo},
			now(),
			now()
		)
    </foreach>  
  </insert>
  
</mapper>