<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chainup.exchange.dao.CoinBankUserProfitMapper">
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.CoinBankUserProfit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="coin_bank_account_id" jdbcType="INTEGER" property="coinBankAccountId" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="deal_coin" jdbcType="VARCHAR" property="dealCoin" />
    <result column="deal_symbol" jdbcType="VARCHAR" property="dealSymbol" />
    <result column="coin_name" jdbcType="VARCHAR" property="coinName" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="account_time" jdbcType="DATE" property="accountTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, coin_bank_account_id, uid, deal_coin, deal_symbol, coin_name, amount, fee, account_time
  </sql>
  <select id="selectByExample" parameterType="com.chainup.common.exchange.entity.CoinBankUserProfitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from coin_bank_user_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coin_bank_user_profit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coin_bank_user_profit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.CoinBankUserProfitExample">
    delete from coin_bank_user_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.CoinBankUserProfit">
    insert into coin_bank_user_profit (id, coin_bank_account_id, uid, 
      deal_coin, deal_symbol, coin_name, 
      amount, fee, account_time
      )
    values (#{id,jdbcType=INTEGER}, #{coinBankAccountId,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{dealCoin,jdbcType=VARCHAR}, #{dealSymbol,jdbcType=VARCHAR}, #{coinName,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{fee,jdbcType=DECIMAL}, #{accountTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.CoinBankUserProfit">
    insert into coin_bank_user_profit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="coinBankAccountId != null">
        coin_bank_account_id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="dealCoin != null">
        deal_coin,
      </if>
      <if test="dealSymbol != null">
        deal_symbol,
      </if>
      <if test="coinName != null">
        coin_name,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="accountTime != null">
        account_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coinBankAccountId != null">
        #{coinBankAccountId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="dealCoin != null">
        #{dealCoin,jdbcType=VARCHAR},
      </if>
      <if test="dealSymbol != null">
        #{dealSymbol,jdbcType=VARCHAR},
      </if>
      <if test="coinName != null">
        #{coinName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="accountTime != null">
        #{accountTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.CoinBankUserProfitExample" resultType="java.lang.Long">
    select count(*) from coin_bank_user_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update coin_bank_user_profit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.coinBankAccountId != null">
        coin_bank_account_id = #{record.coinBankAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.dealCoin != null">
        deal_coin = #{record.dealCoin,jdbcType=VARCHAR},
      </if>
      <if test="record.dealSymbol != null">
        deal_symbol = #{record.dealSymbol,jdbcType=VARCHAR},
      </if>
      <if test="record.coinName != null">
        coin_name = #{record.coinName,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.accountTime != null">
        account_time = #{record.accountTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update coin_bank_user_profit
    set id = #{record.id,jdbcType=INTEGER},
      coin_bank_account_id = #{record.coinBankAccountId,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      deal_coin = #{record.dealCoin,jdbcType=VARCHAR},
      deal_symbol = #{record.dealSymbol,jdbcType=VARCHAR},
      coin_name = #{record.coinName,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      fee = #{record.fee,jdbcType=DECIMAL},
      account_time = #{record.accountTime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.CoinBankUserProfit">
    update coin_bank_user_profit
    <set>
      <if test="coinBankAccountId != null">
        coin_bank_account_id = #{coinBankAccountId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="dealCoin != null">
        deal_coin = #{dealCoin,jdbcType=VARCHAR},
      </if>
      <if test="dealSymbol != null">
        deal_symbol = #{dealSymbol,jdbcType=VARCHAR},
      </if>
      <if test="coinName != null">
        coin_name = #{coinName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="accountTime != null">
        account_time = #{accountTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.CoinBankUserProfit">
    update coin_bank_user_profit
    set coin_bank_account_id = #{coinBankAccountId,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      deal_coin = #{dealCoin,jdbcType=VARCHAR},
      deal_symbol = #{dealSymbol,jdbcType=VARCHAR},
      coin_name = #{coinName,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      fee = #{fee,jdbcType=DECIMAL},
      account_time = #{accountTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectCountBysubUsers" parameterType="java.util.Map" resultType="java.lang.Long">
	 select count(0)
	 from coin_bank_user_profit cbup
		LEFT JOIN user u on u.id=cbup.uid
		INNER   join (
		select cba.id,cba.uid from coin_bank_account cba 
		where 
		 uid in 
		<foreach collection="subUsers" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
		) cbat on cbat.id =cbup.coin_bank_account_id 
		<where>
		<if test="email!= null and email!='' " >
     	and u.email=#{email} 
  		  </if>
		<if test="tel!= null and tel!=''" >
     	and u.mobile_number=#{tel} 
  		  </if>
		<if test="dealCoin!= null and dealCoin!=''" >
     	and cbup.deal_coin=#{dealCoin} 
  		  </if>
		<if test="fee!= null and fee!=''" >
     	and cbup.fee>#{fee} 
  		  </if>
		<if test="accountStime!= null and accountStime!='' and accountEtime!= null and accountEtime!=''" >
     	and cbup.account_time between #{accountStime} and #{accountEtime}
  		  </if>
		</where>
	  </select>
  <select id="selectBysubUsers" parameterType="java.util.Map" resultMap="BaseResultMap">
	 select cbup.id,
	  cbup.coin_bank_account_id,
	   cbup.uid,
	UPPER(deal_coin) dealCoin,
	   cbup.deal_symbol,
	  cbup.coin_name,
	   cbup.amount,
	   cbup.fee,
	   cbup.account_time,
	   
	 u.email as email,u.mobile_number as mobile,
	 	 case 
        when u.auth_level = 0  then 0
    	else  1
   		end authLevel  
	 from coin_bank_user_profit cbup
		LEFT JOIN user u on u.id=cbup.uid
		INNER   join (
		select cba.id,cba.uid from coin_bank_account cba 
		where 
		 uid in 
		<foreach collection="subUsers" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
		) cbat on cbat.id =cbup.coin_bank_account_id 
		<where>
		<if test="email!= null and email!='' " >
     	and u.email=#{email} 
  		  </if>
		<if test="tel!= null and tel!=''" >
     	and u.mobile_number=#{tel} 
  		  </if>
		<if test="dealCoin!= null and dealCoin!=''" >
     	and cbup.deal_coin=#{dealCoin} 
  		  </if>
		<if test="fee!= null and fee!=''" >
     	and cbup.fee>#{fee} 
  		  </if>
		<if test="accountStime!= null and accountStime!='' and accountEtime!= null and accountEtime!=''" >
     	and cbup.account_time between #{accountStime} and #{accountEtime}
  		  </if>
		</where>
		order by cbup.fee desc
		 <if test="pageStart != null and pageStart>=0" >
      limit #{pageStart},#{pageCount}
    </if>
	  </select>
</mapper>