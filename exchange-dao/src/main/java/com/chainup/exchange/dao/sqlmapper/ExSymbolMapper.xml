<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chainup.exchange.dao.ExSymbolMapper" >
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.ExSymbol" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="coin_symbol" property="coinSymbol" jdbcType="VARCHAR" />
    <result column="precision" property="precision" jdbcType="INTEGER" />
    <result column="otc_open" property="otcOpen" jdbcType="CHAR" />
    <result column="is_fiat" property="isFiat" jdbcType="CHAR" />
    <result column="is_quote" property="isQuote" jdbcType="CHAR" />
    <result column="is_open" property="isOpen" jdbcType="CHAR" />
    <result column="deposit_open" property="depositOpen" jdbcType="CHAR" />
    <result column="withdraw_open" property="withdrawOpen" jdbcType="CHAR" />
    <result column="use_rate" property="useRate" jdbcType="CHAR" />
    <result column="token_base" property="tokenBase" jdbcType="VARCHAR" />
    <result column="chain_address" property="chainAddress" jdbcType="VARCHAR" />
    <result column="chain_tx" property="chainTx" jdbcType="VARCHAR" />
    <result column="deposit_confirm" property="depositConfirm" jdbcType="INTEGER" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="link" property="link" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, coin_symbol, `precision`, otc_open, is_fiat, is_quote, is_open, deposit_open, withdraw_open, 
    use_rate, token_base, chain_address, chain_tx, deposit_confirm, icon, link, sort
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chainup.common.exchange.entity.ExSymbolExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ex_symbol
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  
  <select id="selectByUserHave" resultMap="BaseResultMap" parameterType="com.chainup.common.exchange.entity.ExSymbolExample" >
    select 
    <include refid="Base_Column_List" />
    from ex_symbol
  <if test="coinSymbols.size() > 0">
  where coin_symbol in 
  <foreach collection="coinSymbols" index="index" item="item" open="(" separator="," close=")">
               #{item}       
       </foreach>  
  </if>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ex_symbol
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ex_symbol
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.ExSymbolExample" >
    delete from ex_symbol
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.ExSymbol" >
    insert into ex_symbol (id, coin_symbol, `precision`, 
      otc_open, is_fiat, is_quote, is_open, 
      deposit_open, withdraw_open, use_rate, 
      token_base, chain_address, chain_tx, 
      deposit_confirm, icon, link, 
      sort)
    values (#{id,jdbcType=BIGINT}, #{coinSymbol,jdbcType=VARCHAR}, #{precision,jdbcType=INTEGER}, 
      #{otcOpen,jdbcType=CHAR}, #{isFiat,jdbcType=CHAR}, #{isQuote,jdbcType=CHAR}, #{isOpen,jdbcType=CHAR}, 
      #{depositOpen,jdbcType=CHAR}, #{withdrawOpen,jdbcType=CHAR}, #{useRate,jdbcType=CHAR}, 
      #{tokenBase,jdbcType=VARCHAR}, #{chainAddress,jdbcType=VARCHAR}, #{chainTx,jdbcType=VARCHAR}, 
      #{depositConfirm,jdbcType=INTEGER}, #{icon,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.ExSymbol" >
    insert into ex_symbol
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="coinSymbol != null" >
        coin_symbol,
      </if>
      <if test="precision != null" >
        `precision`,
      </if>
      <if test="otcOpen != null" >
        otc_open,
      </if>
      <if test="isFiat != null" >
        is_fiat,
      </if>
      <if test="isQuote != null" >
        is_quote,
      </if>
      <if test="isOpen != null" >
        is_open,
      </if>
      <if test="depositOpen != null" >
        deposit_open,
      </if>
      <if test="withdrawOpen != null" >
        withdraw_open,
      </if>
      <if test="useRate != null" >
        use_rate,
      </if>
      <if test="tokenBase != null" >
        token_base,
      </if>
      <if test="chainAddress != null" >
        chain_address,
      </if>
      <if test="chainTx != null" >
        chain_tx,
      </if>
      <if test="depositConfirm != null" >
        deposit_confirm,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="link != null" >
        link,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="coinSymbol != null" >
        #{coinSymbol,jdbcType=VARCHAR},
      </if>
      <if test="precision != null" >
        #{precision,jdbcType=INTEGER},
      </if>
      <if test="otcOpen != null" >
        #{otcOpen,jdbcType=CHAR},
      </if>
      <if test="isFiat != null" >
        #{isFiat,jdbcType=CHAR},
      </if>
      <if test="isQuote != null" >
        #{isQuote,jdbcType=CHAR},
      </if>
      <if test="isOpen != null" >
        #{isOpen,jdbcType=CHAR},
      </if>
      <if test="depositOpen != null" >
        #{depositOpen,jdbcType=CHAR},
      </if>
      <if test="withdrawOpen != null" >
        #{withdrawOpen,jdbcType=CHAR},
      </if>
      <if test="useRate != null" >
        #{useRate,jdbcType=CHAR},
      </if>
      <if test="tokenBase != null" >
        #{tokenBase,jdbcType=VARCHAR},
      </if>
      <if test="chainAddress != null" >
        #{chainAddress,jdbcType=VARCHAR},
      </if>
      <if test="chainTx != null" >
        #{chainTx,jdbcType=VARCHAR},
      </if>
      <if test="depositConfirm != null" >
        #{depositConfirm,jdbcType=INTEGER},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="link != null" >
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.ExSymbolExample" resultType="java.lang.Integer" >
    select count(*) from ex_symbol
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ex_symbol
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.coinSymbol != null" >
        coin_symbol = #{record.coinSymbol,jdbcType=VARCHAR},
      </if>
      <if test="record.precision != null" >
        `precision` = #{record.precision,jdbcType=INTEGER},
      </if>
      <if test="record.otcOpen != null" >
        otc_open = #{record.otcOpen,jdbcType=CHAR},
      </if>
      <if test="record.isFiat != null" >
        is_fiat = #{record.isFiat,jdbcType=CHAR},
      </if>
      <if test="record.isQuote != null" >
        is_quote = #{record.isQuote,jdbcType=CHAR},
      </if>
      <if test="record.isOpen != null" >
        is_open = #{record.isOpen,jdbcType=CHAR},
      </if>
      <if test="record.depositOpen != null" >
        deposit_open = #{record.depositOpen,jdbcType=CHAR},
      </if>
      <if test="record.withdrawOpen != null" >
        withdraw_open = #{record.withdrawOpen,jdbcType=CHAR},
      </if>
      <if test="record.useRate != null" >
        use_rate = #{record.useRate,jdbcType=CHAR},
      </if>
      <if test="record.tokenBase != null" >
        token_base = #{record.tokenBase,jdbcType=VARCHAR},
      </if>
      <if test="record.chainAddress != null" >
        chain_address = #{record.chainAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.chainTx != null" >
        chain_tx = #{record.chainTx,jdbcType=VARCHAR},
      </if>
      <if test="record.depositConfirm != null" >
        deposit_confirm = #{record.depositConfirm,jdbcType=INTEGER},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.link != null" >
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ex_symbol
    set id = #{record.id,jdbcType=BIGINT},
      coin_symbol = #{record.coinSymbol,jdbcType=VARCHAR},
      `precision` = #{record.precision,jdbcType=INTEGER},
      otc_open = #{record.otcOpen,jdbcType=CHAR},
      is_fiat = #{record.isFiat,jdbcType=CHAR},
      is_quote = #{record.isQuote,jdbcType=CHAR},
      is_open = #{record.isOpen,jdbcType=CHAR},
      deposit_open = #{record.depositOpen,jdbcType=CHAR},
      withdraw_open = #{record.withdrawOpen,jdbcType=CHAR},
      use_rate = #{record.useRate,jdbcType=CHAR},
      token_base = #{record.tokenBase,jdbcType=VARCHAR},
      chain_address = #{record.chainAddress,jdbcType=VARCHAR},
      chain_tx = #{record.chainTx,jdbcType=VARCHAR},
      deposit_confirm = #{record.depositConfirm,jdbcType=INTEGER},
      icon = #{record.icon,jdbcType=VARCHAR},
      link = #{record.link,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.ExSymbol" >
    update ex_symbol
    <set >
      <if test="coinSymbol != null" >
        coin_symbol = #{coinSymbol,jdbcType=VARCHAR},
      </if>
      <if test="precision != null" >
        `precision` = #{precision,jdbcType=INTEGER},
      </if>
      <if test="otcOpen != null" >
        otc_open = #{otcOpen,jdbcType=CHAR},
      </if>
      <if test="isFiat != null" >
        is_fiat = #{isFiat,jdbcType=CHAR},
      </if>
      <if test="isQuote != null" >
        is_quote = #{isQuote,jdbcType=CHAR},
      </if>
      <if test="isOpen != null" >
        is_open = #{isOpen,jdbcType=CHAR},
      </if>
      <if test="depositOpen != null" >
        deposit_open = #{depositOpen,jdbcType=CHAR},
      </if>
      <if test="withdrawOpen != null" >
        withdraw_open = #{withdrawOpen,jdbcType=CHAR},
      </if>
      <if test="useRate != null" >
        use_rate = #{useRate,jdbcType=CHAR},
      </if>
      <if test="tokenBase != null" >
        token_base = #{tokenBase,jdbcType=VARCHAR},
      </if>
      <if test="chainAddress != null" >
        chain_address = #{chainAddress,jdbcType=VARCHAR},
      </if>
      <if test="chainTx != null" >
        chain_tx = #{chainTx,jdbcType=VARCHAR},
      </if>
      <if test="depositConfirm != null" >
        deposit_confirm = #{depositConfirm,jdbcType=INTEGER},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="link != null" >
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.ExSymbol" >
    update ex_symbol
    set coin_symbol = #{coinSymbol,jdbcType=VARCHAR},
      `precision` = #{precision,jdbcType=INTEGER},
      otc_open = #{otcOpen,jdbcType=CHAR},
      is_fiat = #{isFiat,jdbcType=CHAR},
      is_quote = #{isQuote,jdbcType=CHAR},
      is_open = #{isOpen,jdbcType=CHAR},
      deposit_open = #{depositOpen,jdbcType=CHAR},
      withdraw_open = #{withdrawOpen,jdbcType=CHAR},
      use_rate = #{useRate,jdbcType=CHAR},
      token_base = #{tokenBase,jdbcType=VARCHAR},
      chain_address = #{chainAddress,jdbcType=VARCHAR},
      chain_tx = #{chainTx,jdbcType=VARCHAR},
      deposit_confirm = #{depositConfirm,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>