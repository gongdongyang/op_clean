<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chainup.exchange.dao.IecProjectUserMapper">
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.IecProjectUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="iec_project_id" jdbcType="INTEGER" property="iecProjectId" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="effective_amount" jdbcType="DECIMAL" property="effectiveAmount" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="copies" jdbcType="INTEGER" property="copies" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="mobile_number" jdbcType="VARCHAR" property="mobileNumber" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.chainup.common.exchange.entity.IecProjectUserWithBLOBs">
    <result column="match_number_list" jdbcType="LONGVARCHAR" property="matchNumberList" />
    <result column="win_number_list" jdbcType="LONGVARCHAR" property="winNumberList" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, iec_project_id, uid, amount, effective_amount, ctime, mtime, status, copies
  </sql>
  <sql id="Blob_Column_List">
    match_number_list, win_number_list
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.chainup.common.exchange.entity.IecProjectUserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from iec_project_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.chainup.common.exchange.entity.IecProjectUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from iec_project_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from iec_project_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByStatusAndUserInfo"  resultMap="BaseResultMap">
    select 
   a.id, a.iec_project_id, a.uid, a.amount, a.effective_amount, a.ctime, a.mtime, a.status, a.copies
    ,b.mobile_number,b.email,b.nickname   
     from iec_project_user a left join user b on a.uid = b.id
     where a.status = #{status,jdbcType=TINYINT} and a.iec_project_id = #{iecProjectId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from iec_project_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.IecProjectUserExample">
    delete from iec_project_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.IecProjectUserWithBLOBs">
    insert into iec_project_user (id, iec_project_id, uid, 
      amount, effective_amount, ctime, 
      mtime, status, copies, 
      match_number_list, win_number_list)
    values (#{id,jdbcType=INTEGER}, #{iecProjectId,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{amount,jdbcType=DECIMAL}, #{effectiveAmount,jdbcType=DECIMAL}, #{ctime,jdbcType=TIMESTAMP}, 
      #{mtime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{copies,jdbcType=INTEGER}, 
      #{matchNumberList,jdbcType=LONGVARCHAR}, #{winNumberList,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.IecProjectUserWithBLOBs">
    insert into iec_project_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="iecProjectId != null">
        iec_project_id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="effectiveAmount != null">
        effective_amount,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="mtime != null">
        mtime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="copies != null">
        copies,
      </if>
      <if test="matchNumberList != null">
        match_number_list,
      </if>
      <if test="winNumberList != null">
        win_number_list,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="iecProjectId != null">
        #{iecProjectId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="effectiveAmount != null">
        #{effectiveAmount,jdbcType=DECIMAL},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="copies != null">
        #{copies,jdbcType=INTEGER},
      </if>
      <if test="matchNumberList != null">
        #{matchNumberList,jdbcType=LONGVARCHAR},
      </if>
      <if test="winNumberList != null">
        #{winNumberList,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.IecProjectUserExample" resultType="java.lang.Long">
    select count(*) from iec_project_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update iec_project_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.iecProjectId != null">
        iec_project_id = #{record.iecProjectId,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.effectiveAmount != null">
        effective_amount = #{record.effectiveAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null">
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.copies != null">
        copies = #{record.copies,jdbcType=INTEGER},
      </if>
      <if test="record.matchNumberList != null">
        match_number_list = #{record.matchNumberList,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.winNumberList != null">
        win_number_list = #{record.winNumberList,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update iec_project_user
    set id = #{record.id,jdbcType=INTEGER},
      iec_project_id = #{record.iecProjectId,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      effective_amount = #{record.effectiveAmount,jdbcType=DECIMAL},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      copies = #{record.copies,jdbcType=INTEGER},
      match_number_list = #{record.matchNumberList,jdbcType=LONGVARCHAR},
      win_number_list = #{record.winNumberList,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update iec_project_user
    set id = #{record.id,jdbcType=INTEGER},
      iec_project_id = #{record.iecProjectId,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      effective_amount = #{record.effectiveAmount,jdbcType=DECIMAL},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      copies = #{record.copies,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.IecProjectUserWithBLOBs">
    update iec_project_user
    <set>
      <if test="iecProjectId != null">
        iec_project_id = #{iecProjectId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="effectiveAmount != null">
        effective_amount = #{effectiveAmount,jdbcType=DECIMAL},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="copies != null">
        copies = #{copies,jdbcType=INTEGER},
      </if>
      <if test="matchNumberList != null">
        match_number_list = #{matchNumberList,jdbcType=LONGVARCHAR},
      </if>
      <if test="winNumberList != null">
        win_number_list = #{winNumberList,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.chainup.common.exchange.entity.IecProjectUserWithBLOBs">
    update iec_project_user
    set iec_project_id = #{iecProjectId,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      effective_amount = #{effectiveAmount,jdbcType=DECIMAL},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      copies = #{copies,jdbcType=INTEGER},
      match_number_list = #{matchNumberList,jdbcType=LONGVARCHAR},
      win_number_list = #{winNumberList,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.IecProjectUser">
    update iec_project_user
    set iec_project_id = #{iecProjectId,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      effective_amount = #{effectiveAmount,jdbcType=DECIMAL},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      copies = #{copies,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>