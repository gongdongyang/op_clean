<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chainup.exchange.dao.HistoryAccountMapper" >
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.HistoryAccount" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="trans_id" property="transId" jdbcType="BIGINT" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="account_type" property="accountType" jdbcType="INTEGER" />
    <result column="trans_type" property="transType" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="mtime" property="mtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, trans_id, uid, account_type, trans_type, amount, balance, ctime, mtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chainup.common.exchange.entity.HistoryAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from history_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from history_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from history_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.HistoryAccountExample" >
    delete from history_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.HistoryAccount" >
    insert into history_account (id, trans_id, uid, 
      account_type, trans_type, amount, 
      balance, ctime, mtime
      )
    values (#{id,jdbcType=BIGINT}, #{transId,jdbcType=BIGINT}, #{uid,jdbcType=INTEGER}, 
      #{accountType,jdbcType=INTEGER}, #{transType,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, 
      #{balance,jdbcType=DECIMAL}, #{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.HistoryAccount" >
    insert into history_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="transId != null" >
        trans_id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="transType != null" >
        trans_type,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="mtime != null" >
        mtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="transId != null" >
        #{transId,jdbcType=BIGINT},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=INTEGER},
      </if>
      <if test="transType != null" >
        #{transType,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        #{mtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.HistoryAccountExample" resultType="java.lang.Integer" >
    select count(*) from history_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update history_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.transId != null" >
        trans_id = #{record.transId,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.accountType != null" >
        account_type = #{record.accountType,jdbcType=INTEGER},
      </if>
      <if test="record.transType != null" >
        trans_type = #{record.transType,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null" >
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update history_account
    set id = #{record.id,jdbcType=BIGINT},
      trans_id = #{record.transId,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=INTEGER},
      account_type = #{record.accountType,jdbcType=INTEGER},
      trans_type = #{record.transType,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      balance = #{record.balance,jdbcType=DECIMAL},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.HistoryAccount" >
    update history_account
    <set >
      <if test="transId != null" >
        trans_id = #{transId,jdbcType=BIGINT},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=INTEGER},
      </if>
      <if test="transType != null" >
        trans_type = #{transType,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.HistoryAccount" >
    update history_account
    set trans_id = #{transId,jdbcType=BIGINT},
      uid = #{uid,jdbcType=INTEGER},
      account_type = #{accountType,jdbcType=INTEGER},
      trans_type = #{transType,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>