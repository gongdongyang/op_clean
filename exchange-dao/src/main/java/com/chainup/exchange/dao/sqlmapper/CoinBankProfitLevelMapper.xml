<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chainup.exchange.dao.CoinBankProfitLevelMapper">
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.CoinBankProfitLevel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="profit_percent" jdbcType="DECIMAL" property="profitPercent" />
    <result column="compute_amount" jdbcType="DECIMAL" property="computeAmount" />
    <result column="project_amount" jdbcType="INTEGER" property="projectAmount" />
    <result column="register_amount" jdbcType="INTEGER" property="registerAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, level, profit_percent, compute_amount, project_amount, register_amount
  </sql>
  <select id="selectByExample" parameterType="com.chainup.common.exchange.entity.CoinBankProfitLevelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from coin_bank_profit_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coin_bank_profit_level
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coin_bank_profit_level
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.CoinBankProfitLevelExample">
    delete from coin_bank_profit_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.CoinBankProfitLevel">
    insert into coin_bank_profit_level (id, level, profit_percent, 
      compute_amount, project_amount, register_amount
      )
    values (#{id,jdbcType=INTEGER}, #{level,jdbcType=TINYINT}, #{profitPercent,jdbcType=DECIMAL}, 
      #{computeAmount,jdbcType=DECIMAL}, #{projectAmount,jdbcType=INTEGER}, #{registerAmount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.CoinBankProfitLevel">
    insert into coin_bank_profit_level
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="profitPercent != null">
        profit_percent,
      </if>
      <if test="computeAmount != null">
        compute_amount,
      </if>
      <if test="projectAmount != null">
        project_amount,
      </if>
      <if test="registerAmount != null">
        register_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="profitPercent != null">
        #{profitPercent,jdbcType=DECIMAL},
      </if>
      <if test="computeAmount != null">
        #{computeAmount,jdbcType=DECIMAL},
      </if>
      <if test="projectAmount != null">
        #{projectAmount,jdbcType=INTEGER},
      </if>
      <if test="registerAmount != null">
        #{registerAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.CoinBankProfitLevelExample" resultType="java.lang.Long">
    select count(*) from coin_bank_profit_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update coin_bank_profit_level
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.profitPercent != null">
        profit_percent = #{record.profitPercent,jdbcType=DECIMAL},
      </if>
      <if test="record.computeAmount != null">
        compute_amount = #{record.computeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.projectAmount != null">
        project_amount = #{record.projectAmount,jdbcType=INTEGER},
      </if>
      <if test="record.registerAmount != null">
        register_amount = #{record.registerAmount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update coin_bank_profit_level
    set id = #{record.id,jdbcType=INTEGER},
      level = #{record.level,jdbcType=TINYINT},
      profit_percent = #{record.profitPercent,jdbcType=DECIMAL},
      compute_amount = #{record.computeAmount,jdbcType=DECIMAL},
      project_amount = #{record.projectAmount,jdbcType=INTEGER},
      register_amount = #{record.registerAmount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.CoinBankProfitLevel">
    update coin_bank_profit_level
    <set>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="profitPercent != null">
        profit_percent = #{profitPercent,jdbcType=DECIMAL},
      </if>
      <if test="computeAmount != null">
        compute_amount = #{computeAmount,jdbcType=DECIMAL},
      </if>
      <if test="projectAmount != null">
        project_amount = #{projectAmount,jdbcType=INTEGER},
      </if>
      <if test="registerAmount != null">
        register_amount = #{registerAmount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.CoinBankProfitLevel">
    update coin_bank_profit_level
    set level = #{level,jdbcType=TINYINT},
      profit_percent = #{profitPercent,jdbcType=DECIMAL},
      compute_amount = #{computeAmount,jdbcType=DECIMAL},
      project_amount = #{projectAmount,jdbcType=INTEGER},
      register_amount = #{registerAmount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectMaxLevelByComputeAmount" parameterType="java.math.BigDecimal" resultType="java.lang.Integer">
   SELECT MAX(t.`level`) AS LEVEL FROM `coin_bank_profit_level` t WHERE t.`compute_amount` &lt;= #{amount,jdbcType=DECIMAL}
  </select>
  
   <select id="selectMaxLevelByRegisterAmount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
   SELECT MAX(t.`level`) AS LEVEL FROM `coin_bank_profit_level` t WHERE t.`register_amount` &lt;= #{amount,jdbcType=INTEGER}
  </select>
  
</mapper>