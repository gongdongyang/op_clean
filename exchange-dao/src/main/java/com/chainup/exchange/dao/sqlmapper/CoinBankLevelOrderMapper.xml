<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chainup.exchange.dao.CoinBankLevelOrderMapper">
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.CoinBankLevelOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="coin_bank_id" jdbcType="INTEGER" property="coinBankId" />
    <result column="pre_level" jdbcType="TINYINT" property="preLevel" />
    <result column="next_level" jdbcType="TINYINT" property="nextLevel" />
    <result column="project_amount" jdbcType="INTEGER" property="projectAmount" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, coin_bank_id, pre_level, next_level, project_amount, status, ctime, mtime
  </sql>
  <select id="selectByExample" parameterType="com.chainup.common.exchange.entity.CoinBankLevelOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from coin_bank_level_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coin_bank_level_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coin_bank_level_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.CoinBankLevelOrderExample">
    delete from coin_bank_level_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.CoinBankLevelOrder">
    insert into coin_bank_level_order (id, coin_bank_id, pre_level, 
      next_level, project_amount, status, 
      ctime, mtime)
    values (#{id,jdbcType=INTEGER}, #{coinBankId,jdbcType=INTEGER}, #{preLevel,jdbcType=TINYINT}, 
      #{nextLevel,jdbcType=TINYINT}, #{projectAmount,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.CoinBankLevelOrder">
    insert into coin_bank_level_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="coinBankId != null">
        coin_bank_id,
      </if>
      <if test="preLevel != null">
        pre_level,
      </if>
      <if test="nextLevel != null">
        next_level,
      </if>
      <if test="projectAmount != null">
        project_amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="mtime != null">
        mtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coinBankId != null">
        #{coinBankId,jdbcType=INTEGER},
      </if>
      <if test="preLevel != null">
        #{preLevel,jdbcType=TINYINT},
      </if>
      <if test="nextLevel != null">
        #{nextLevel,jdbcType=TINYINT},
      </if>
      <if test="projectAmount != null">
        #{projectAmount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        #{mtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.CoinBankLevelOrderExample" resultType="java.lang.Long">
    select count(*) from coin_bank_level_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update coin_bank_level_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.coinBankId != null">
        coin_bank_id = #{record.coinBankId,jdbcType=INTEGER},
      </if>
      <if test="record.preLevel != null">
        pre_level = #{record.preLevel,jdbcType=TINYINT},
      </if>
      <if test="record.nextLevel != null">
        next_level = #{record.nextLevel,jdbcType=TINYINT},
      </if>
      <if test="record.projectAmount != null">
        project_amount = #{record.projectAmount,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null">
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update coin_bank_level_order
    set id = #{record.id,jdbcType=INTEGER},
      coin_bank_id = #{record.coinBankId,jdbcType=INTEGER},
      pre_level = #{record.preLevel,jdbcType=TINYINT},
      next_level = #{record.nextLevel,jdbcType=TINYINT},
      project_amount = #{record.projectAmount,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.CoinBankLevelOrder">
    update coin_bank_level_order
    <set>
      <if test="coinBankId != null">
        coin_bank_id = #{coinBankId,jdbcType=INTEGER},
      </if>
      <if test="preLevel != null">
        pre_level = #{preLevel,jdbcType=TINYINT},
      </if>
      <if test="nextLevel != null">
        next_level = #{nextLevel,jdbcType=TINYINT},
      </if>
      <if test="projectAmount != null">
        project_amount = #{projectAmount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.CoinBankLevelOrder">
    update coin_bank_level_order
    set coin_bank_id = #{coinBankId,jdbcType=INTEGER},
      pre_level = #{preLevel,jdbcType=TINYINT},
      next_level = #{nextLevel,jdbcType=TINYINT},
      project_amount = #{projectAmount,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectCountByCoinbank" parameterType="java.util.Map" resultType="java.lang.Long">
  select count(0)
 from coin_bank_level_order cblo
LEFT JOIN coin_bank c on c.id=cblo.coin_bank_id

  	<where>
		<if test="status!= null" >
     	and cblo.status=#{status} 
  		  </if>
  	</where>
  order by cblo.ctime desc
      <if test="pageStart != null and pageStart>=0" >
      limit #{pageStart},#{pageCount}
    </if>
  </select>
  <select id="selectListByCoinbank" parameterType="java.util.Map" resultMap="BaseResultMap">
  		select cblo.*,c.name coinBankName
 from coin_bank_level_order cblo
LEFT JOIN coin_bank c on c.id=cblo.coin_bank_id
  	<where>
		<if test="status!= null" >
     	and cblo.status=#{status} 
  		  </if>
  	</where>
  order by cblo.ctime desc
      <if test="pageStart != null and pageStart>=0" >
      limit #{pageStart},#{pageCount}
    </if>
  </select>
  
</mapper>