<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chainup.exchange.dao.ExTradeMapper" >
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.ExTrade" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="volume" property="volume" jdbcType="DECIMAL" />
    <result column="bid_id" property="bidId" jdbcType="BIGINT" />
    <result column="ask_id" property="askId" jdbcType="BIGINT" />
    <result column="trend_side" property="trendSide" jdbcType="VARCHAR" />
    <result column="bid_user_id" property="bidUserId" jdbcType="INTEGER" />
    <result column="ask_user_id" property="askUserId" jdbcType="INTEGER" />
    <result column="buy_fee" property="buyFee" jdbcType="DECIMAL" />
    <result column="sell_fee" property="sellFee" jdbcType="DECIMAL" />
    <result column="buy_fee_coin" property="buyFeeCoin" jdbcType="VARCHAR" />
    <result column="sell_fee_coin" property="sellFeeCoin" jdbcType="VARCHAR" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="mtime" property="mtime" jdbcType="TIMESTAMP" />
    <result column="table_name" property="tableName" jdbcType="VARCHAR" />
    <result column="volumeMins" property="volumeMins" jdbcType="INTEGER" />
    <result column="volumeCount" property="volumeCount" jdbcType="DECIMAL" />
    <result column="userId" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
    <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, price, volume, bid_id, ask_id, trend_side, bid_user_id, ask_user_id, buy_fee, 
    sell_fee, buy_fee_coin, sell_fee_coin, ctime, mtime
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chainup.common.exchange.entity.ExTradeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ${tableName}

    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from ${tableName}

    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from ${tableName}
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.ExTradeExample" >
    delete from ${tableName}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.ExTrade" >
    insert into ${tableName} (id, price, volume, 
      bid_id, ask_id, trend_side, 
      bid_user_id, ask_user_id, buy_fee, 
      sell_fee, buy_fee_coin, sell_fee_coin, 
      ctime, mtime)
	  
    values (#{id,jdbcType=BIGINT}, #{price,jdbcType=DECIMAL}, #{volume,jdbcType=DECIMAL}, 
      #{bidId,jdbcType=BIGINT}, #{askId,jdbcType=BIGINT}, #{trendSide,jdbcType=CHAR}, 
      #{bidUserId,jdbcType=INTEGER}, #{askUserId,jdbcType=INTEGER}, #{buyFee,jdbcType=DECIMAL}, 
      #{sellFee,jdbcType=DECIMAL}, #{buyFeeCoin,jdbcType=VARCHAR}, #{sellFeeCoin,jdbcType=VARCHAR}, 
      #{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.ExTrade" >
    insert into ${tableName}
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="volume != null" >
        volume,
      </if>
      <if test="bidId != null" >
        bid_id,
      </if>
      <if test="askId != null" >
        ask_id,
      </if>
      <if test="trendSide != null" >
        trend_side,
      </if>
      <if test="bidUserId != null" >
        bid_user_id,
      </if>
      <if test="askUserId != null" >
        ask_user_id,
      </if>
      <if test="buyFee != null" >
        buy_fee,
      </if>
      <if test="sellFee != null" >
        sell_fee,
      </if>
      <if test="buyFeeCoin != null" >
        buy_fee_coin,
      </if>
      <if test="sellFeeCoin != null" >
        sell_fee_coin,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="mtime != null" >
        mtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="volume != null" >
        #{volume,jdbcType=DECIMAL},
      </if>
      <if test="bidId != null" >
        #{bidId,jdbcType=BIGINT},
      </if>
      <if test="askId != null" >
        #{askId,jdbcType=BIGINT},
      </if>
      <if test="trendSide != null" >
        #{trendSide,jdbcType=CHAR},
      </if>
      <if test="bidUserId != null" >
        #{bidUserId,jdbcType=INTEGER},
      </if>
      <if test="askUserId != null" >
        #{askUserId,jdbcType=INTEGER},
      </if>
      <if test="buyFee != null" >
        #{buyFee,jdbcType=DECIMAL},
      </if>
      <if test="sellFee != null" >
        #{sellFee,jdbcType=DECIMAL},
      </if>
      <if test="buyFeeCoin != null" >
        #{buyFeeCoin,jdbcType=VARCHAR},
      </if>
      <if test="sellFeeCoin != null" >
        #{sellFeeCoin,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        #{mtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.ExTradeExample" resultType="java.lang.Integer" >
    select count(*) from ${tableName}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ${tableName}

    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.volume != null" >
        volume = #{record.volume,jdbcType=DECIMAL},
      </if>
      <if test="record.bidId != null" >
        bid_id = #{record.bidId,jdbcType=BIGINT},
      </if>
      <if test="record.askId != null" >
        ask_id = #{record.askId,jdbcType=BIGINT},
      </if>
      <if test="record.trendSide != null" >
        trend_side = #{record.trendSide,jdbcType=CHAR},
      </if>
      <if test="record.bidUserId != null" >
        bid_user_id = #{record.bidUserId,jdbcType=INTEGER},
      </if>
      <if test="record.askUserId != null" >
        ask_user_id = #{record.askUserId,jdbcType=INTEGER},
      </if>
      <if test="record.buyFee != null" >
        buy_fee = #{record.buyFee,jdbcType=DECIMAL},
      </if>
      <if test="record.sellFee != null" >
        sell_fee = #{record.sellFee,jdbcType=DECIMAL},
      </if>
      <if test="record.buyFeeCoin != null" >
        buy_fee_coin = #{record.buyFeeCoin,jdbcType=VARCHAR},
      </if>
      <if test="record.sellFeeCoin != null" >
        sell_fee_coin = #{record.sellFeeCoin,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null" >
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ${tableName}

    set id = #{record.id,jdbcType=BIGINT},
      price = #{record.price,jdbcType=DECIMAL},
      volume = #{record.volume,jdbcType=DECIMAL},
      bid_id = #{record.bidId,jdbcType=BIGINT},
      ask_id = #{record.askId,jdbcType=BIGINT},
      trend_side = #{record.trendSide,jdbcType=CHAR},
      bid_user_id = #{record.bidUserId,jdbcType=INTEGER},
      ask_user_id = #{record.askUserId,jdbcType=INTEGER},
      buy_fee = #{record.buyFee,jdbcType=DECIMAL},
      sell_fee = #{record.sellFee,jdbcType=DECIMAL},
      buy_fee_coin = #{record.buyFeeCoin,jdbcType=VARCHAR},
      sell_fee_coin = #{record.sellFeeCoin,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.ExTrade" >
    update ${tableName}

    <set >
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="volume != null" >
        volume = #{volume,jdbcType=DECIMAL},
      </if>
      <if test="bidId != null" >
        bid_id = #{bidId,jdbcType=BIGINT},
      </if>
      <if test="askId != null" >
        ask_id = #{askId,jdbcType=BIGINT},
      </if>
      <if test="trendSide != null" >
        trend_side = #{trendSide,jdbcType=CHAR},
      </if>
      <if test="bidUserId != null" >
        bid_user_id = #{bidUserId,jdbcType=INTEGER},
      </if>
      <if test="askUserId != null" >
        ask_user_id = #{askUserId,jdbcType=INTEGER},
      </if>
      <if test="buyFee != null" >
        buy_fee = #{buyFee,jdbcType=DECIMAL},
      </if>
      <if test="sellFee != null" >
        sell_fee = #{sellFee,jdbcType=DECIMAL},
      </if>
      <if test="buyFeeCoin != null" >
        buy_fee_coin = #{buyFeeCoin,jdbcType=VARCHAR},
      </if>
      <if test="sellFeeCoin != null" >
        sell_fee_coin = #{sellFeeCoin,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null" >
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.ExTrade" >
    update ${tableName}

    set price = #{price,jdbcType=DECIMAL},
      volume = #{volume,jdbcType=DECIMAL},
      bid_id = #{bidId,jdbcType=BIGINT},
      ask_id = #{askId,jdbcType=BIGINT},
      trend_side = #{trendSide,jdbcType=CHAR},
      bid_user_id = #{bidUserId,jdbcType=INTEGER},
      ask_user_id = #{askUserId,jdbcType=INTEGER},
      buy_fee = #{buyFee,jdbcType=DECIMAL},
      sell_fee = #{sellFee,jdbcType=DECIMAL},
      buy_fee_coin = #{buyFeeCoin,jdbcType=VARCHAR},
      sell_fee_coin = #{sellFeeCoin,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectTradeSortCountByExample" resultType="java.lang.Integer" parameterType="com.chainup.common.exchange.entity.ExTradeExample" >
    select count(DISTINCT userId) userTradeNum from (
		select 
		    bid_user_id userId,SUM(volume) userTradeNum 
		from ${tableName}
	    <if test="_parameter != null" >
	      <include refid="Example_Where_Clause" />
	    </if>
		group by bid_user_id
		
		union all
		
		select 
		    ask_user_id userId,SUM(volume) userTradeNum 
		from ${tableName}
	    <if test="_parameter != null" >
	      <include refid="Example_Where_Clause" />
	    </if>
		group by ask_user_id
	) temp 
  </select>
  
  <select id="selectTradeSortByExample" resultType="java.util.Map" parameterType="com.chainup.common.exchange.entity.ExTradeExample" >
	select userId,sum(userTradeNum) userTradeNum from (
		select 
		    bid_user_id userId,SUM(volume) userTradeNum 
		from ${tableName}
	    <if test="_parameter != null" >
	      <include refid="Example_Where_Clause" />
	    </if>
		group by bid_user_id
		
		union all
		
		select 
		    ask_user_id userId,SUM(volume) userTradeNum 
		from ${tableName}
	    <if test="_parameter != null" >
	      <include refid="Example_Where_Clause" />
	    </if>
		group by ask_user_id
	) temp 
	group by userId 
	order by userTradeNum desc
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectLastOne" resultMap="BaseResultMap" parameterType="java.lang.String">
	SELECT <include refid="Base_Column_List" /> 
	from ${tableName} where id = (SELECT max(id) FROM ${tableName})
  </select> 
  <resultMap id="TradeResultMap" type="com.chainup.common.exchange.entity.TradeTick" >
    <result column="userId" property="userId" jdbcType="INTEGER" />
    <result column="totalVolume" property="totalVolume" jdbcType="DECIMAL" />
    <result column="totalAmount" property="totalAmount" jdbcType="DECIMAL" />
  </resultMap>
  <select id="willRiskExTradeList" resultMap="BaseResultMap" parameterType="com.chainup.common.exchange.entity.ExTrade" >
    SELECT t.*,'${tableName}' as table_name
	FROM ${tableName} t
	where t.id > ${id}
	order by t.id desc
	LIMIT 10000
  </select>
  
  <select id="getExTradeLastOne" resultMap="BaseResultMap" parameterType="com.chainup.common.exchange.entity.ExTrade" >
    SELECT t.*,'${tableName}' as table_name
	FROM ${tableName} t
	order by t.id desc
	LIMIT 1
  </select>
  
  <select id="getExTradeById" resultMap="BaseResultMap" parameterType="com.chainup.common.exchange.entity.ExTrade" >
    SELECT t.*,'${tableName}' as table_name
	FROM ${tableName} t
	where id = #{id}
  </select>
  
  <select id="getHighLowTrade" resultMap="BaseResultMap" parameterType="com.chainup.common.exchange.entity.ExTrade" >
    SELECT
		max(t.price) AS highest,
		min(t.price) AS lowest
	FROM ${tableName} t
	WHERE
		t.ctime > DATE_SUB(NOW(), INTERVAL 30 MINUTE)
  </select>
  
  <select id="getVolumeCount" parameterType="com.chainup.common.exchange.entity.ExTrade" resultType="java.lang.Double" >
   select  SUM(t.volume) as volumeCount
    FROM ${tableName} t
    where 1=1
    <if test="volumeMins != null" >
     and t.ctime > DATE_SUB(NOW(), INTERVAL ${volumeMins} MINUTE)
    </if>
  </select>
  
  <select id="getTradeUserList" parameterType="com.chainup.common.exchange.entity.ExTrade" resultType="java.lang.Integer" >
  	SELECT DISTINCT t.user_id FROM
	(
		(
			SELECT
				t1.bid_user_id AS user_id
			FROM
				${tableName} t1
			WHERE
				t1.ctime > DATE_SUB(NOW(), INTERVAL ${volumeMins} MINUTE)
		)
		UNION
		(
			SELECT
				t2.ask_user_id AS user_id
			FROM
				${tableName} t2
			WHERE
				t2.ctime > DATE_SUB(NOW(), INTERVAL ${volumeMins} MINUTE)
		)
	) t
  </select>
  
   <select id="getTradeUserVolumeCount" parameterType="com.chainup.common.exchange.entity.ExTrade" resultType="java.lang.Double" >
    select  SUM(t.volume) as volumeCount
    FROM ${tableName} t
    where (t.bid_user_id = #{userId} OR t.ask_user_id = #{userId} )
     AND t.ctime > DATE_SUB(NOW(), INTERVAL ${volumeMins} MINUTE)
  </select>
  
   <select id="getOrderTables" parameterType="com.chainup.common.exchange.entity.ExTrade" resultType="java.lang.String">
    SELECT
		table_name
	FROM
		information_schema.tables
	WHERE
		table_schema = 'exchange'
	AND table_name LIKE '%ex_order_%'
	AND table_rows > 0 
  </select>
  
   <select id="getAccountBalance" parameterType="com.chainup.common.exchange.entity.ExTrade" resultType="java.lang.Double">
    SELECT balance
	FROM
		account t
	WHERE
		t.uid = #{uid}
	AND t.type = #{symbolType}
  </select>
  
  <select id="getUserDealCount" resultType="java.lang.Integer" parameterType="com.chainup.common.exchange.entity.ExTrade" >
  	SELECT count(1)
	FROM ${tableName} 
	where (status = 2 or status = 3)  and user_id = #{uid}
  </select>
  
  <select id="getUserIpLoginCount" resultType="java.lang.Integer" parameterType="com.chainup.common.exchange.entity.ExTrade" >
  	SELECT count(1)
	FROM
		history_login t
	WHERE
		t.uid = #{uid}
	 AND t.lg_ip = #{lgIp}
  </select>
  
  <select id="getUserLoginCount" resultType="java.lang.Integer" parameterType="com.chainup.common.exchange.entity.ExTrade" >
  	SELECT count(1)
	FROM
		history_login t
	WHERE
		t.uid = #{uid}
  </select>

  <select id="getUserLastLoginIP" resultType="java.lang.String" parameterType="com.chainup.common.exchange.entity.ExTrade" >
  	SELECT t.lg_ip
	FROM history_login t
	WHERE t.uid = #{uid}
	ORDER BY t.lg_in_time DESC
	LIMIT 1
  </select>
  
  <select id="getAddressSuccessCount" resultType="java.lang.Integer" parameterType="com.chainup.common.exchange.entity.ExTrade" >
  	SELECT count(1)
	FROM transaction_withdraw_crypto
	WHERE address_to = #{address}
	AND status = 5
  </select>
  
  <select id="getAddressSuccessUserCount" resultType="java.lang.Integer" parameterType="com.chainup.common.exchange.entity.ExTrade" >
  	SELECT count(DISTINCT uid)
	FROM transaction_withdraw_crypto
	WHERE address_to = #{address}
	AND status = 5
  </select>
  
 
   <select id="selectBidTradeList" resultMap="TradeResultMap">
  
        SELECT bid_user_id as userId, sum(volume) as totalVolume, sum(price * volume) as totalAmount
		from ${tableName}
		where 1=1
		<if test="minDate != null " >
            and ctime &gt;= #{minDate,jdbcType=TIMESTAMP}  
        </if>
	    <if test="maxDate != null " >
            and ctime &lt;= #{maxDate,jdbcType=TIMESTAMP}    
        </if>
		GROUP BY userId
  </select>
  
  
  <select id="selectAskTradeList" resultMap="TradeResultMap">
  
         SELECT ask_user_id as userId, sum(volume) as totalVolume, sum(price * volume) as totalAmount
		from ${tableName}
		where 1=1
		<if test="minDate != null " >
            and ctime &gt;= #{minDate,jdbcType=TIMESTAMP}  
        </if>
	    <if test="maxDate != null " >
            and ctime &lt;= #{maxDate,jdbcType=TIMESTAMP}    
        </if>
		GROUP BY userId
  </select>
   
  
   <select id="selectTradeCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(*) from ${tableName}
		where 1=1
		<if test="minDate != null " >
            and ctime &gt;= #{minDate,jdbcType=TIMESTAMP}  
        </if>
	    <if test="maxDate != null " >
            and ctime &lt;= #{maxDate,jdbcType=TIMESTAMP}    
        </if>
	</select>
	
	
	 <select id="getBidUserIds" parameterType="java.util.Map" resultType="java.lang.Integer">
		select bid_user_id from ${tableName}
		where 1=1
		<if test="minDate != null " >
            and ctime &gt;= #{minDate,jdbcType=TIMESTAMP}  
        </if>
	    <if test="maxDate != null " >
            and ctime &lt;= #{maxDate,jdbcType=TIMESTAMP}    
        </if>
	</select>
	
	
	<select id="getAskUserIds" parameterType="java.util.Map" resultType="java.lang.Integer" >
		select ask_user_id from ${tableName}
		where 1=1
		<if test="minDate != null " >
            and ctime &gt;= #{minDate,jdbcType=TIMESTAMP}  
        </if>
	    <if test="maxDate != null " >
            and ctime &lt;= #{maxDate,jdbcType=TIMESTAMP}    
        </if>
	</select>
	
	<select id="getUserIdList" resultType="java.lang.Integer" parameterType="com.chainup.common.exchange.entity.ExTrade" >
		SELECT DISTINCT t.id from user t
	</select> 

</mapper>