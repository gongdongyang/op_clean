<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chainup.exchange.dao.ExLanguageConfigMapper" >
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.ExLanguageConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="is_open" property="isOpen" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="key" property="key" jdbcType="VARCHAR" />
    <result column="language" property="language" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="sms_header" property="smsHeader" jdbcType="VARCHAR" />
    <result column="email_header" property="emailHeader" jdbcType="VARCHAR" />
    <result column="otc_pay_mode" property="otcPayMode" jdbcType="VARCHAR" />
    <result column="otc_country" property="otcCountry" jdbcType="VARCHAR" />
    <result column="otc_paycoin" property="otcPaycoin" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, is_open, type, `key`, `language`, title, icon, sms_header, email_header, otc_pay_mode, otc_country,otc_paycoin
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chainup.common.exchange.entity.ExLanguageConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ex_language_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ex_language_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ex_language_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.ExLanguageConfigExample" >
    delete from ex_language_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.ExLanguageConfig" >
    insert into ex_language_config (id, is_open, type, 
      `key`, `language`, title, 
      icon, sms_header, email_header, 
      otc_pay_mode, otc_country, otc_paycoin
      )
    values (#{id,jdbcType=INTEGER}, #{isOpen,jdbcType=TINYINT}, #{type,jdbcType=INTEGER}, 
      #{key,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{smsHeader,jdbcType=VARCHAR}, #{emailHeader,jdbcType=VARCHAR}, 
      #{otcPayMode,jdbcType=VARCHAR}, #{otcCountry,jdbcType=VARCHAR}, #{otcPaycoin,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.ExLanguageConfig" >
    insert into ex_language_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="isOpen != null" >
        is_open,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="key != null" >
        `key`,
      </if>
      <if test="language != null" >
        `language`,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="smsHeader != null" >
        sms_header,
      </if>
      <if test="emailHeader != null" >
        email_header,
      </if>
      <if test="otcPayMode != null" >
        otc_pay_mode,
      </if>
      <if test="otcCountry != null" >
        otc_country,
      </if>
      <if test="otcPaycoin != null" >
        otc_paycoin,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="isOpen != null" >
        #{isOpen,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="key != null" >
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="language != null" >
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="smsHeader != null" >
        #{smsHeader,jdbcType=VARCHAR},
      </if>
      <if test="emailHeader != null" >
        #{emailHeader,jdbcType=VARCHAR},
      </if>
      <if test="otcPayMode != null" >
        #{otcPayMode,jdbcType=VARCHAR},
      </if>
      <if test="otcCountry != null" >
        #{otcCountry,jdbcType=VARCHAR},
      </if>
      <if test="otcPaycoin != null" >
        #{otcPaycoin,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.ExLanguageConfigExample" resultType="java.lang.Integer" >
    select count(*) from ex_language_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ex_language_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.isOpen != null" >
        is_open = #{record.isOpen,jdbcType=TINYINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.key != null" >
        key = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.language != null" >
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.smsHeader != null" >
        sms_header = #{record.smsHeader,jdbcType=VARCHAR},
      </if>
      <if test="record.emailHeader != null" >
        email_header = #{record.emailHeader,jdbcType=VARCHAR},
      </if>
      <if test="record.otcPayMode != null" >
        otc_pay_mode = #{record.otcPayMode,jdbcType=VARCHAR},
      </if>
      <if test="record.otcCountry != null" >
        otc_country = #{record.otcCountry,jdbcType=VARCHAR},
      </if>
      <if test="record.otcPaycoin != null" >
        otc_paycoin = #{record.otcPaycoin,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ex_language_config
    set id = #{record.id,jdbcType=INTEGER},
      is_open = #{record.isOpen,jdbcType=TINYINT},
      type = #{record.type,jdbcType=INTEGER},
      `key` = #{record.key,jdbcType=VARCHAR},
      `language` = #{record.language,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      sms_header = #{record.smsHeader,jdbcType=VARCHAR},
      email_header = #{record.emailHeader,jdbcType=VARCHAR},
      otc_pay_mode = #{record.otcPayMode,jdbcType=VARCHAR},
      otc_country = #{record.otcCountry,jdbcType=VARCHAR},
      otc_paycoin = #{record.otcPaycoin,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.ExLanguageConfig" >
    update ex_language_config
    <set >
      <if test="isOpen != null" >
        is_open = #{isOpen,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="key != null" >
        `key` = #{key,jdbcType=VARCHAR},
      </if>
      <if test="language != null" >
        `language` = #{language,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="smsHeader != null" >
        sms_header = #{smsHeader,jdbcType=VARCHAR},
      </if>
      <if test="emailHeader != null" >
        email_header = #{emailHeader,jdbcType=VARCHAR},
      </if>
      <if test="otcPayMode != null" >
        otc_pay_mode = #{otcPayMode,jdbcType=VARCHAR},
      </if>
      <if test="otcCountry != null" >
        otc_country = #{otcCountry,jdbcType=VARCHAR},
      </if>
      <if test="otcPaycoin != null" >
        otc_paycoin = #{otcPaycoin,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.ExLanguageConfig" >
    update ex_language_config
    set is_open = #{isOpen,jdbcType=TINYINT},
      type = #{type,jdbcType=INTEGER},
      `key` = #{key,jdbcType=VARCHAR},
      `language` = #{language,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      sms_header = #{smsHeader,jdbcType=VARCHAR},
      email_header = #{emailHeader,jdbcType=VARCHAR},
      otc_pay_mode = #{otcPayMode,jdbcType=VARCHAR},
      otc_country = #{otcCountry,jdbcType=VARCHAR},
      otc_paycoin = #{otcPaycoin,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>