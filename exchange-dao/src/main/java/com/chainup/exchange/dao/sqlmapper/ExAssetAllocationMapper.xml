<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chainup.exchange.dao.ExAssetAllocationMapper" >
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.ExAssetAllocation" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="asset_type" property="assetType" jdbcType="VARCHAR" />
    <result column="asset_a" property="assetA" jdbcType="VARCHAR" />
    <result column="asset_bc" property="assetBc" jdbcType="VARCHAR" />
    <result column="coin_symbol" property="coinSymbol" jdbcType="VARCHAR" />
    <result column="symbol" property="symbol" jdbcType="VARCHAR" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, asset_type, asset_a, asset_bc, coin_symbol, symbol, tag, description
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chainup.common.exchange.entity.ExAssetAllocationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ex_asset_allocation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ex_asset_allocation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ex_asset_allocation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.ExAssetAllocationExample" >
    delete from ex_asset_allocation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.ExAssetAllocation" >
    insert into ex_asset_allocation (id, asset_type, asset_a, 
      asset_bc, coin_symbol, symbol, 
      tag, description)
    values (#{id,jdbcType=BIGINT}, #{assetType,jdbcType=VARCHAR}, #{assetA,jdbcType=VARCHAR}, 
      #{assetBc,jdbcType=VARCHAR}, #{coinSymbol,jdbcType=VARCHAR}, #{symbol,jdbcType=VARCHAR}, 
      #{tag,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.ExAssetAllocation" >
    insert into ex_asset_allocation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="assetType != null" >
        asset_type,
      </if>
      <if test="assetA != null" >
        asset_a,
      </if>
      <if test="assetBc != null" >
        asset_bc,
      </if>
      <if test="coinSymbol != null" >
        coin_symbol,
      </if>
      <if test="symbol != null" >
        symbol,
      </if>
      <if test="tag != null" >
        tag,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="assetType != null" >
        #{assetType,jdbcType=VARCHAR},
      </if>
      <if test="assetA != null" >
        #{assetA,jdbcType=VARCHAR},
      </if>
      <if test="assetBc != null" >
        #{assetBc,jdbcType=VARCHAR},
      </if>
      <if test="coinSymbol != null" >
        #{coinSymbol,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null" >
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.ExAssetAllocationExample" resultType="java.lang.Integer" >
    select count(*) from ex_asset_allocation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ex_asset_allocation
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.assetType != null" >
        asset_type = #{record.assetType,jdbcType=VARCHAR},
      </if>
      <if test="record.assetA != null" >
        asset_a = #{record.assetA,jdbcType=VARCHAR},
      </if>
      <if test="record.assetBc != null" >
        asset_bc = #{record.assetBc,jdbcType=VARCHAR},
      </if>
      <if test="record.coinSymbol != null" >
        coin_symbol = #{record.coinSymbol,jdbcType=VARCHAR},
      </if>
      <if test="record.symbol != null" >
        symbol = #{record.symbol,jdbcType=VARCHAR},
      </if>
      <if test="record.tag != null" >
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ex_asset_allocation
    set id = #{record.id,jdbcType=BIGINT},
      asset_type = #{record.assetType,jdbcType=VARCHAR},
      asset_a = #{record.assetA,jdbcType=VARCHAR},
      asset_bc = #{record.assetBc,jdbcType=VARCHAR},
      coin_symbol = #{record.coinSymbol,jdbcType=VARCHAR},
      symbol = #{record.symbol,jdbcType=VARCHAR},
      tag = #{record.tag,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.ExAssetAllocation" >
    update ex_asset_allocation
    <set >
      <if test="assetType != null" >
        asset_type = #{assetType,jdbcType=VARCHAR},
      </if>
      <if test="assetA != null" >
        asset_a = #{assetA,jdbcType=VARCHAR},
      </if>
      <if test="assetBc != null" >
        asset_bc = #{assetBc,jdbcType=VARCHAR},
      </if>
      <if test="coinSymbol != null" >
        coin_symbol = #{coinSymbol,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null" >
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.ExAssetAllocation" >
    update ex_asset_allocation
    set asset_type = #{assetType,jdbcType=VARCHAR},
      asset_a = #{assetA,jdbcType=VARCHAR},
      asset_bc = #{assetBc,jdbcType=VARCHAR},
      coin_symbol = #{coinSymbol,jdbcType=VARCHAR},
      symbol = #{symbol,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <insert id="insertSelectiveByList" parameterType="com.chainup.common.exchange.entity.ExAssetAllocation" >
        insert into ex_asset_allocation (asset_type,asset_a,asset_bc,coin_symbol,tag,description) values
        <foreach collection="record" item="item"  separator=",">
            ( #{item.assetType,jdbcType=VARCHAR},
            #{item.assetA,jdbcType=VARCHAR},
            #{item.assetBc,jdbcType=VARCHAR},
            #{item.coinSymbol,jdbcType=VARCHAR},
            #{item.tag,jdbcType=VARCHAR},
            #{item.description,jdbcType=VARCHAR})
        </foreach>
    </insert>
</mapper>