<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chainup.kline.dao.ExScaleKlineMapper">
  <resultMap id="BaseResultMap" type="com.chainup.common.exchange.entity.ExScaleKline">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="idx" jdbcType="BIGINT" property="idx" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="vol" jdbcType="DECIMAL" property="vol" />
    <result column="open" jdbcType="DECIMAL" property="open" />
    <result column="close" jdbcType="DECIMAL" property="close" />
    <result column="high" jdbcType="DECIMAL" property="high" />
    <result column="low" jdbcType="DECIMAL" property="low" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, idx, type, amount, vol, open, close, high, low, count, ctime
  </sql>
  <select id="selectByExample" parameterType="com.chainup.common.exchange.entity.ExScaleKlineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ${tableName}
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ${tableName}
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ${tableName}
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chainup.common.exchange.entity.ExScaleKlineExample">
    delete from ${tableName}
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chainup.common.exchange.entity.ExScaleKline">
    insert into ${tableName} (id, idx, type, amount, 
      vol, open, close, high, 
      low, count, ctime
      )
    values (#{id,jdbcType=BIGINT}, #{idx,jdbcType=BIGINT}, #{type,jdbcType=CHAR}, #{amount,jdbcType=DECIMAL}, 
      #{vol,jdbcType=DECIMAL}, #{open,jdbcType=DECIMAL}, #{close,jdbcType=DECIMAL}, #{high,jdbcType=DECIMAL}, 
      #{low,jdbcType=DECIMAL}, #{count,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chainup.common.exchange.entity.ExScaleKline">
    insert into ${tableName}
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="idx != null">
        idx,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="vol != null">
        vol,
      </if>
      <if test="open != null">
        open,
      </if>
      <if test="close != null">
        close,
      </if>
      <if test="high != null">
        high,
      </if>
      <if test="low != null">
        low,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="idx != null">
        #{idx,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="vol != null">
        #{vol,jdbcType=DECIMAL},
      </if>
      <if test="open != null">
        #{open,jdbcType=DECIMAL},
      </if>
      <if test="close != null">
        #{close,jdbcType=DECIMAL},
      </if>
      <if test="high != null">
        #{high,jdbcType=DECIMAL},
      </if>
      <if test="low != null">
        #{low,jdbcType=DECIMAL},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chainup.common.exchange.entity.ExScaleKlineExample" resultType="java.lang.Integer">
    select count(*) from ${tableName}
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ${record.tableName}
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.idx != null">
        idx = #{record.idx,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.vol != null">
        vol = #{record.vol,jdbcType=DECIMAL},
      </if>
      <if test="record.open != null">
        open = #{record.open,jdbcType=DECIMAL},
      </if>
      <if test="record.close != null">
        close = #{record.close,jdbcType=DECIMAL},
      </if>
      <if test="record.high != null">
        high = #{record.high,jdbcType=DECIMAL},
      </if>
      <if test="record.low != null">
        low = #{record.low,jdbcType=DECIMAL},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ${tableName}
    set id = #{record.id,jdbcType=BIGINT},
      idx = #{record.idx,jdbcType=BIGINT},
      type = #{record.type,jdbcType=CHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      vol = #{record.vol,jdbcType=DECIMAL},
      open = #{record.open,jdbcType=DECIMAL},
      close = #{record.close,jdbcType=DECIMAL},
      high = #{record.high,jdbcType=DECIMAL},
      low = #{record.low,jdbcType=DECIMAL},
      count = #{record.count,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chainup.common.exchange.entity.ExScaleKline">
    update ${tableName}
    <set>
      <if test="idx != null">
        idx = #{idx,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="vol != null">
        vol = #{vol,jdbcType=DECIMAL},
      </if>
      <if test="open != null">
        open = #{open,jdbcType=DECIMAL},
      </if>
      <if test="close != null">
        close = #{close,jdbcType=DECIMAL},
      </if>
      <if test="high != null">
        high = #{high,jdbcType=DECIMAL},
      </if>
      <if test="low != null">
        low = #{low,jdbcType=DECIMAL},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chainup.common.exchange.entity.ExScaleKline">
    update ${tableName}
    set idx = #{idx,jdbcType=BIGINT},
      type = #{type,jdbcType=CHAR},
      amount = #{amount,jdbcType=DECIMAL},
      vol = #{vol,jdbcType=DECIMAL},
      open = #{open,jdbcType=DECIMAL},
      close = #{close,jdbcType=DECIMAL},
      high = #{high,jdbcType=DECIMAL},
      low = #{low,jdbcType=DECIMAL},
      count = #{count,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>